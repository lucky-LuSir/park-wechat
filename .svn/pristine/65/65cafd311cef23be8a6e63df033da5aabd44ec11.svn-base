// pages/bill/bill.js
Page({

  /**
   * 页面的初始数据
   */
  data: {
    //总支付金额
    needPayTotal: '',
    //选中的订单
    selectedBill: [],
    //全选
    selectAll: false,
    //总金额
    totalPrice: '',
    //总选择条数
    selectCount: '',
    //当前页 账单详细
    billInfoList: [],
    //当前页 未支付 账单的code与price组成的map
    unReceivedMap: {},

    //当前账单的index
    billIndex: '',
    //默认支付状态标签激活下标
    payStatusActive: 0,

    waterUnReceivedList: [],
    waterUnReceivedMap: {},
    waterReceivedList: [],

    rentUnReceivedList: [],
    rentUnReceivedMap: {},
    rentReceivedList: [],

    electricityUnReceivedList: [],
    electricityUnReceivedMap: {},
    electricityReceivedList: []

  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {
    console.log(options)
    // this._initBillInfo();  
  },

  //获取账单信息
  /**
   * TODO
   */

  //初始化账单数据
  _initBillInfo(ctCode){
    this._getRentUnRecBill(ctCode)
    this.setData({
      //初始化展示租金 未支付 账单信息
      billInfoList: this.data.rentUnReceivedList,
      unReceivedMap: this.data.rentUnReceivedMap,
      billIndex: 0
    })
  },

  //获取租金 未支付
  _getRentUnRecBill(ctCode){
    let params = {
      entity: {
        ctCode: ctCode
      }
    }
    request({
      url: 'wxBill/rentBillUnRec',
      data: params,
      method: 'POST'
    }).then(res => {
      let billList = res.data.result;
      let billMap = new Map();
      for (var i = 0; i < billList.length; i++) {
        var billCode = billList[i].billCode;
        var receivePrice = (parseFloat(billList[i].totalPrice) - parseFloat(billList[i].paidPrice)).toFixed(2);
        billMap.set(billCode, receivePrice);
      }
      this.setData({
        rentUnReceivedList: billList,
        rentUnReceivedMap: billMap
      })
    })
  },

  //获取租金 已支付
  _getRentRecedBill(ctCode) {
    let params = {
      entity: {
        ctCode: ctCode
      }
    }
    request({
      url: 'wxBill/rentBillReced',
      data: params,
      method: 'POST'
    }).then(res => {
      let billList = res.data.result;
      this.setData({
        rentReceivedList: billList
      })
    })
  },

  //获取水费 未支付
  _getWaterUnRecBill(ctCode) {
    let params = {
      entity: {
        ctCode: ctCode
      }
    }
    request({
      url: 'wxBill/waterBillUnRec',
      data: params,
      method: 'POST'
    }).then(res => {
      let billList = res.data.result;
      let billMap = new Map();
      for (var i = 0; i < billList.length; i++) {
        var billCode = billList[i].billCode;
        var receivePrice = (parseFloat(billList[i].totalPrice) - parseFloat(billList[i].paidPrice)).toFixed(2);
        billMap.set(billCode, receivePrice);
      }
      this.setData({
        waterUnReceivedList: billList,
        waterUnReceivedMap: billMap
      })
    })
  },

  //获取水费 已支付
  _getWaterRecedBill(ctCode) {
    let params = {
      entity: {
        ctCode: ctCode
      }
    }
    request({
      url: 'wxBill/waterBillReced',
      data: params,
      method: 'POST'
    }).then(res => {
      let billList = res.data.result;
      this.setData({
        waterReceivedList: billList
      })
    })
  },

  //获取电费 未支付
  _getEleUnRecBill(ctCode) {
    let params = {
      entity: {
        ctCode: ctCode
      }
    }
    request({
      url: 'wxBill/eleBillUnRec',
      data: params,
      method: 'POST'
    }).then(res => {
      let billList = res.data.result;
      let billMap = new Map();
      for (var i = 0; i < billList.length; i++) {
        var billCode = billList[i].billCode;
        var receivePrice = (parseFloat(billList[i].totalPrice) - parseFloat(billList[i].paidPrice)).toFixed(2);
        billMap.set(billCode, receivePrice);
      }
      this.setData({
        electricityUnReceivedList: billList,
        electricityUnReceivedMap: billMap
      })
    })
  },

  //获取电费 已支付
  _getEleRecedBill(ctCode) {
    let params = {
      entity: {
        ctCode: ctCode
      }
    }
    request({
      url: 'wxBill/eleBillReced',
      data: params,
      method: 'POST'
    }).then(res => {
      let billList = res.data.result;
      this.setData({
        electricityReceivedList: billList
      })
    })
  },

  //返回选中的账单
  selectBack(options) {
    const selectList = options.detail.selectedBill;
    
    if (selectList.length == this.data.billInfoList.length) {
      this.setData({
        selectAll: true
      })
    } else {
      this.setData({
        selectAll: false
      })
    }

    let dataMap = this.data.unReceivedMap;
    this.toSumPrice(selectList, dataMap)   
  },

  //计算总价
  toSumPrice(selectList, dataMap){
    let sumPrice = 0;
    for (let i = 0; i < selectList.length; i++) {
      sumPrice = sumPrice + parseFloat(dataMap.get(selectList[i]));
      sumPrice = parseFloat(sumPrice.toFixed(2));
    }

    this.setData({
      totalPrice: sumPrice,
      selectCount: selectList.length
    })
  },

  //切换tab账单
  changeBill(options) {
    const index = options.detail.index;
    this.clearBill();
    //保存当前账单的index
    this.setData({
      billIndex: index,
      payStatusActive: 0
    })

    if (index == 0) {
      this.setData({
        billInfoList: this.data.rentUnReceivedList,
        unReceivedMap: this.data.rentUnReceivedMap,
      })
    } else if (index == 1) {
      this.setData({
        billInfoList: this.data.waterUnReceivedList,
        unReceivedMap: this.data.waterUnReceivedMap,
      })
    } else{
      this.setData({
        billInfoList: this.data.electricityUnReceivedList,
        unReceivedMap: this.data.electricityUnReceivedMap,
      })
    }

  },
  //支付状tab态切换
  changePayStatus(options) {
    const index = options.detail.index;
    this.clearBill();
    const billIndex = this.data.billIndex;
    switch (billIndex) {
      case 0:
        switch (index) {
          case 0:
            this.setData({
              billInfoList: this.data.rentUnReceivedList,
              unReceivedMap: this.data.rentUnReceivedMap,
            })
            break;
          case 1:
            this.setData({
              billInfoList: this.data.rentReceivedList
            })
            break;
        }
        break;
      case 1:
        switch (index) {
          case 0:
            this.setData({
              billInfoList: this.data.waterUnReceivedList,
              unReceivedMap: this.data.waterUnReceivedMap,
            })
            break;
          case 1:
            this.setData({
              billInfoList: this.data.waterReceivedList
            })
            
            break;
        }
        break;
      case 2:
        switch (index) {
          case 0:
            this.setData({
              billInfoList: this.data.electricityUnReceivedList,
              unReceivedMap: this.data.electricityUnReceivedMap,
            })
            break;
          case 1:
            this.setData({
              billInfoList: this.data.electricityReceivedList
            })
            break;
        }
        break;
    }
  },

  //清空账单选中
  clearBill() {
    this.setData({
      //总支付金额
      needPayTotal: '',
      //选中的订单
      selectedBill: [],
      //全选
      selectAll: false,
      //总金额
      totalPrice: '',
      //总选择条数
      selectCount: '',
      //当前页 账单详细
      billInfoList: [],
      //当前页 未支付 账单的code与price组成的map
      unReceivedMap: {},
      //当前页 已支付 账单
    })
  },

  //全选返回
  selectAllBack(options) {
    //获取bill-info组件的对象
    // const my_check = this.selectComponent('#waterBill');
    // my_check.selectAll(options.detail.checked)
    let codeList = [];
    if (options.detail.checked) {
      codeList = this.data.billInfoList.map(res => { return res.code })
      this.setData({
        selectedBill: codeList
      })

    } else{
      this.setData({
        selectedBill: []
      })
    }
    let dataMap = this.data.unReceivedMap;
    this.toSumPrice(codeList, dataMap);
  },

})